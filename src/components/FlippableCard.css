.flippable-card {
  perspective: 1000px;
  width: 100%; /* Take up full available width */
  max-width: 200px; /* Set a fixed width to mimic the size of playing cards */
  height: 300px; /* Set a fixed height for playing card proportions */
  margin: 10px; /* Reduce margin to decrease the gap between cards */
  transition: box-shadow 0.3s ease, transform 0.3s ease;
  border-radius: 12px; /* Rounded corners like playing cards */
  border: 2px solid white; /* Classic card border */
  background-color: #fff; /* White background for a clean card look */
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2); /* Subtle shadow for depth */
}

.flippable-card-inner {
  position: relative;
  width: 100%;
  height: 100%; /* Allow the card height to be flexible */
  min-height: 250px; /* Ensure minimum height for the cards */
  transition: transform 0.6s, box-shadow 0.3s ease;
  transform-style: preserve-3d;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  border-radius: 12px; /* Ensure rounded corners on the inner card as well */
}

.flippable-card.flipped .flippable-card-inner {
  transform: rotateY(180deg);
}

.flippable-card-front,
.flippable-card-back {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 10px; /* Reduce padding to avoid overflow */
  border-radius: 12px; /* Match the rounded corners */
  box-sizing: border-box;
}

/* Front side of the card styled to resemble playing cards */
.flippable-card-front {
  background-color: #fff; /* White front for a playing card feel */
  color: black;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-shadow: 0 0 10px rgba(255, 215, 0, 0.5); /* Subtle gold glow */
}

.flippable-card-front:hover {
  border: 2px solid #ffd700; /* Gold border on hover */
  box-shadow: 0 0 15px rgba(255, 215, 0, 0.8);
}

.flippable-card-back {
  background-color: #ffd700; /* Golden yellow for the back */
  color: black;
  transform: rotateY(180deg);
  border-radius: 12px;
  padding: 20px; /* Increased padding for space between the text and borders */
  display: flex;
  flex-direction: column;
  justify-content: space-between; /* Space between content and the button */
  box-sizing: border-box;
}

.flippable-card-back p {
  font-size: 1rem;
  color: black;
  line-height: 1.4; /* Reduce line spacing */
  margin: 0 0 10px 0; /* Add some margin at the bottom */
}

/* Styling for the text inside the card front */
.flippable-card-front h3 {
  font-family: 'Playfair Display', serif;
  font-size: 1.5rem;
  color: black;
  margin-top: 10px;
}

.flippable-card-front p {
  font-size: 1rem;
  color: #555;
}

/* Optional card icon styling (e.g., if adding a crown or bulb) */
.flippable-card-front .card-icon {
  font-size: 2.5rem;
  color: #000;
  margin-bottom: 10px;
}

.confirm-button {
  padding: 8px 16px;
  background-color: #008000;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s;
  margin-top: 10px; /* Space between button and text */
  align-self: flex-end; /* Push the button to the bottom-right if needed */
}

.confirm-button:hover {
  background-color: #006400;
}

/* Subtle overlay with gradient for completed state */
.completed-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  background: linear-gradient(135deg, rgba(50, 205, 50, 0.3), rgba(50, 205, 50, 0.1)); /* Gentle gradient */
  border-radius: 12px; /* Match the rounded corners */
  opacity: 0.9; /* Slightly visible */
  pointer-events: none; /* No interaction */
}

/* Animated checkmark */
.completed-checkmark {
  font-size: 2rem;
  color: #32cd32; /* Lime green for success */
  animation: pop-in 0.3s ease-out forwards;
}

@keyframes pop-in {
  0% {
    transform: scale(0);
    opacity: 0;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

/* Remove glow effect */
.flippable-card.completed {
  cursor: default; /* Indicate no further interaction */
}
